//
// TransformationsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class TransformationsAPI {

    /**
     Create Transformation
     
     - parameter createTransformationV1Input: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createTransformation(createTransformationV1Input: CreateTransformationV1Input, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: CreateTransformation200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return createTransformationWithRequestBuilder(createTransformationV1Input: createTransformationV1Input).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Transformation
     - POST /transformations
     - Creates a new Transformation.    When called, this endpoint may generate the `Transformation Created` event in the [audit trail](/tag/Audit-Trail). **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter createTransformationV1Input: (body)  
     - returns: RequestBuilder<CreateTransformation200Response> 
     */
    open class func createTransformationWithRequestBuilder(createTransformationV1Input: CreateTransformationV1Input) -> RequestBuilder<CreateTransformation200Response> {
        let localVariablePath = "/transformations"
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createTransformationV1Input)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateTransformation200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Delete Transformation
     
     - parameter transformationId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func deleteTransformation(transformationId: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: DeleteTransformation200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return deleteTransformationWithRequestBuilder(transformationId: transformationId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete Transformation
     - DELETE /transformations/{transformationId}
     - Deletes a Transformation.    When called, this endpoint may generate the `Transformation Deleted` event in the [audit trail](/tag/Audit-Trail). **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter transformationId: (path)  
     - returns: RequestBuilder<DeleteTransformation200Response> 
     */
    open class func deleteTransformationWithRequestBuilder(transformationId: String) -> RequestBuilder<DeleteTransformation200Response> {
        var localVariablePath = "/transformations/{transformationId}"
        let transformationIdPreEscape = "\(APIHelper.mapValueToPathItem(transformationId))"
        let transformationIdPostEscape = transformationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{transformationId}", with: transformationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DeleteTransformation200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Transformation
     
     - parameter transformationId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getTransformation(transformationId: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: GetTransformation200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getTransformationWithRequestBuilder(transformationId: transformationId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Transformation
     - GET /transformations/{transformationId}
     - Gets a Transformation.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter transformationId: (path)  
     - returns: RequestBuilder<GetTransformation200Response> 
     */
    open class func getTransformationWithRequestBuilder(transformationId: String) -> RequestBuilder<GetTransformation200Response> {
        var localVariablePath = "/transformations/{transformationId}"
        let transformationIdPreEscape = "\(APIHelper.mapValueToPathItem(transformationId))"
        let transformationIdPostEscape = transformationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{transformationId}", with: transformationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetTransformation200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Transformations
     
     - parameter pagination: (query) Pagination options.  This parameter exists in v1. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listTransformations(pagination: PaginationInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ListTransformations200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listTransformationsWithRequestBuilder(pagination: pagination).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Transformations
     - GET /transformations
     - Lists all Transformations in the Workspace.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter pagination: (query) Pagination options.  This parameter exists in v1. 
     - returns: RequestBuilder<ListTransformations200Response> 
     */
    open class func listTransformationsWithRequestBuilder(pagination: PaginationInput) -> RequestBuilder<ListTransformations200Response> {
        let localVariablePath = "/transformations"
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "pagination": pagination.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListTransformations200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Transformation
     
     - parameter transformationId: (path)  
     - parameter updateTransformationV1Input: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateTransformation(transformationId: String, updateTransformationV1Input: UpdateTransformationV1Input, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateTransformation200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return updateTransformationWithRequestBuilder(transformationId: transformationId, updateTransformationV1Input: updateTransformationV1Input).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Transformation
     - PATCH /transformations/{transformationId}
     - Updates an existing Transformation.    When called, this endpoint may generate the `Transformation Updated` event in the [audit trail](/tag/Audit-Trail). **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter transformationId: (path)  
     - parameter updateTransformationV1Input: (body)  
     - returns: RequestBuilder<UpdateTransformation200Response> 
     */
    open class func updateTransformationWithRequestBuilder(transformationId: String, updateTransformationV1Input: UpdateTransformationV1Input) -> RequestBuilder<UpdateTransformation200Response> {
        var localVariablePath = "/transformations/{transformationId}"
        let transformationIdPreEscape = "\(APIHelper.mapValueToPathItem(transformationId))"
        let transformationIdPostEscape = transformationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{transformationId}", with: transformationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateTransformationV1Input)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateTransformation200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
