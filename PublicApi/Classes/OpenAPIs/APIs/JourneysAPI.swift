//
// JourneysAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class JourneysAPI {

    /**
     Create Journey
     
     - parameter spaceId: (path)  
     - parameter createJourneyAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createJourney(spaceId: String, createJourneyAlphaInput: CreateJourneyAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: CreateJourney201Response?, _ error: Error?) -> Void)) -> RequestTask {
        return createJourneyWithRequestBuilder(spaceId: spaceId, createJourneyAlphaInput: createJourneyAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Journey
     - POST /spaces/{spaceId}/journeys
     - Creates Journey.  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Journeys feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter createJourneyAlphaInput: (body)  
     - returns: RequestBuilder<CreateJourney201Response> 
     */
    open class func createJourneyWithRequestBuilder(spaceId: String, createJourneyAlphaInput: CreateJourneyAlphaInput) -> RequestBuilder<CreateJourney201Response> {
        var localVariablePath = "/spaces/{spaceId}/journeys"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createJourneyAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateJourney201Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Journey
     
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getJourney(spaceId: String, containerId: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: GetJourney200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getJourneyWithRequestBuilder(spaceId: spaceId, containerId: containerId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Journey
     - GET /spaces/{spaceId}/journeys/{containerId}
     - Returns the journey by containerId  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Journeys feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - returns: RequestBuilder<GetJourney200Response> 
     */
    open class func getJourneyWithRequestBuilder(spaceId: String, containerId: String) -> RequestBuilder<GetJourney200Response> {
        var localVariablePath = "/spaces/{spaceId}/journeys/{containerId}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let containerIdPreEscape = "\(APIHelper.mapValueToPathItem(containerId))"
        let containerIdPostEscape = containerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{containerId}", with: containerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetJourney200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Journey Analytics
     
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter version: (query) The journey version.  This parameter exists in alpha. 
     - parameter fromDate: (query) This parameter exists in alpha. 
     - parameter toDate: (query) This parameter exists in alpha. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getJourneyAnalytics(spaceId: String, containerId: String, version: Double, fromDate: String, toDate: String? = nil, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: GetJourneyAnalytics200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getJourneyAnalyticsWithRequestBuilder(spaceId: spaceId, containerId: containerId, version: version, fromDate: fromDate, toDate: toDate).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Journey Analytics
     - GET /spaces/{spaceId}/journeys/{containerId}/analytics
     - Get Analytics for a journey  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Journeys feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter version: (query) The journey version.  This parameter exists in alpha. 
     - parameter fromDate: (query) This parameter exists in alpha. 
     - parameter toDate: (query) This parameter exists in alpha. (optional)
     - returns: RequestBuilder<GetJourneyAnalytics200Response> 
     */
    open class func getJourneyAnalyticsWithRequestBuilder(spaceId: String, containerId: String, version: Double, fromDate: String, toDate: String? = nil) -> RequestBuilder<GetJourneyAnalytics200Response> {
        var localVariablePath = "/spaces/{spaceId}/journeys/{containerId}/analytics"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let containerIdPreEscape = "\(APIHelper.mapValueToPathItem(containerId))"
        let containerIdPostEscape = containerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{containerId}", with: containerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "version": version.encodeToJSON(),
            "fromDate": fromDate.encodeToJSON(),
            "toDate": toDate?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetJourneyAnalytics200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Remove Journey from Space
     
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter version: (query) The journey version.  This parameter exists in alpha. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func removeJourneyFromSpace(spaceId: String, containerId: String, version: Double, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: RemoveJourneyFromSpace200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return removeJourneyFromSpaceWithRequestBuilder(spaceId: spaceId, containerId: containerId, version: version).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Remove Journey from Space
     - DELETE /spaces/{spaceId}/journeys/{containerId}
     - Delete a journey  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Journeys feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter version: (query) The journey version.  This parameter exists in alpha. 
     - returns: RequestBuilder<RemoveJourneyFromSpace200Response> 
     */
    open class func removeJourneyFromSpaceWithRequestBuilder(spaceId: String, containerId: String, version: Double) -> RequestBuilder<RemoveJourneyFromSpace200Response> {
        var localVariablePath = "/spaces/{spaceId}/journeys/{containerId}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let containerIdPreEscape = "\(APIHelper.mapValueToPathItem(containerId))"
        let containerIdPostEscape = containerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{containerId}", with: containerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "version": version.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RemoveJourneyFromSpace200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Replace Steps for Journey
     
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter replaceStepsForJourneyAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func replaceStepsForJourney(spaceId: String, containerId: String, replaceStepsForJourneyAlphaInput: ReplaceStepsForJourneyAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ReplaceStepsForJourney200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return replaceStepsForJourneyWithRequestBuilder(spaceId: spaceId, containerId: containerId, replaceStepsForJourneyAlphaInput: replaceStepsForJourneyAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Replace Steps for Journey
     - PUT /spaces/{spaceId}/journeys/{containerId}/steps
     - Replace steps for a journey  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Journeys feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter replaceStepsForJourneyAlphaInput: (body)  
     - returns: RequestBuilder<ReplaceStepsForJourney200Response> 
     */
    open class func replaceStepsForJourneyWithRequestBuilder(spaceId: String, containerId: String, replaceStepsForJourneyAlphaInput: ReplaceStepsForJourneyAlphaInput) -> RequestBuilder<ReplaceStepsForJourney200Response> {
        var localVariablePath = "/spaces/{spaceId}/journeys/{containerId}/steps"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let containerIdPreEscape = "\(APIHelper.mapValueToPathItem(containerId))"
        let containerIdPostEscape = containerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{containerId}", with: containerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: replaceStepsForJourneyAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ReplaceStepsForJourney200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Destinations for Journey
     
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter updateDestinationsForJourneyAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateDestinationsForJourney(spaceId: String, containerId: String, updateDestinationsForJourneyAlphaInput: UpdateDestinationsForJourneyAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateDestinationsForJourney200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return updateDestinationsForJourneyWithRequestBuilder(spaceId: spaceId, containerId: containerId, updateDestinationsForJourneyAlphaInput: updateDestinationsForJourneyAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Destinations for Journey
     - PATCH /spaces/{spaceId}/journeys/{containerId}/destinations
     - Update DESTINATIONS for a journey  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Journeys feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter updateDestinationsForJourneyAlphaInput: (body)  
     - returns: RequestBuilder<UpdateDestinationsForJourney200Response> 
     */
    open class func updateDestinationsForJourneyWithRequestBuilder(spaceId: String, containerId: String, updateDestinationsForJourneyAlphaInput: UpdateDestinationsForJourneyAlphaInput) -> RequestBuilder<UpdateDestinationsForJourney200Response> {
        var localVariablePath = "/spaces/{spaceId}/journeys/{containerId}/destinations"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let containerIdPreEscape = "\(APIHelper.mapValueToPathItem(containerId))"
        let containerIdPostEscape = containerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{containerId}", with: containerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateDestinationsForJourneyAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateDestinationsForJourney200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Status for Journey
     
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter updateStatusForJourneyAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateStatusForJourney(spaceId: String, containerId: String, updateStatusForJourneyAlphaInput: UpdateStatusForJourneyAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateStatusForJourney200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return updateStatusForJourneyWithRequestBuilder(spaceId: spaceId, containerId: containerId, updateStatusForJourneyAlphaInput: updateStatusForJourneyAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Status for Journey
     - PATCH /spaces/{spaceId}/journeys/{containerId}/status
     - Update status of the journey   • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Journeys feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter containerId: (path)  
     - parameter updateStatusForJourneyAlphaInput: (body)  
     - returns: RequestBuilder<UpdateStatusForJourney200Response> 
     */
    open class func updateStatusForJourneyWithRequestBuilder(spaceId: String, containerId: String, updateStatusForJourneyAlphaInput: UpdateStatusForJourneyAlphaInput) -> RequestBuilder<UpdateStatusForJourney200Response> {
        var localVariablePath = "/spaces/{spaceId}/journeys/{containerId}/status"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let containerIdPreEscape = "\(APIHelper.mapValueToPathItem(containerId))"
        let containerIdPostEscape = containerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{containerId}", with: containerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateStatusForJourneyAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateStatusForJourney200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
