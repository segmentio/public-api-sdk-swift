//
// AudiencesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AudiencesAPI {

    /**
     Add Audience Schedule to Audience
     
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter addAudienceScheduleToAudienceAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func addAudienceScheduleToAudience(spaceId: String, id: String, addAudienceScheduleToAudienceAlphaInput: AddAudienceScheduleToAudienceAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: AddAudienceScheduleToAudience200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return addAudienceScheduleToAudienceWithRequestBuilder(spaceId: spaceId, id: id, addAudienceScheduleToAudienceAlphaInput: addAudienceScheduleToAudienceAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Add Audience Schedule to Audience
     - POST /spaces/{spaceId}/audiences/{id}/schedules
     - The ability to configure the run schedule for an Audience is limited to Linked Audiences (audienceType = LINKED).  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter addAudienceScheduleToAudienceAlphaInput: (body)  
     - returns: RequestBuilder<AddAudienceScheduleToAudience200Response> 
     */
    open class func addAudienceScheduleToAudienceWithRequestBuilder(spaceId: String, id: String, addAudienceScheduleToAudienceAlphaInput: AddAudienceScheduleToAudienceAlphaInput) -> RequestBuilder<AddAudienceScheduleToAudience200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/{id}/schedules"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: addAudienceScheduleToAudienceAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AddAudienceScheduleToAudience200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Create Audience
     
     - parameter spaceId: (path)  
     - parameter createAudienceBetaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createAudience(spaceId: String, createAudienceBetaInput: CreateAudienceBetaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: CreateAudience200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return createAudienceWithRequestBuilder(spaceId: spaceId, createAudienceBetaInput: createAudienceBetaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Audience
     - POST /spaces/{spaceId}/audiences
     - Creates Audience.  • This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.  • When called, this endpoint may generate the `Audience Created` event in the [audit trail](/tag/Audit-Trail).  Note: The definition for an Audience created using the API is not editable through the Segment App.   The rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter createAudienceBetaInput: (body)  
     - returns: RequestBuilder<CreateAudience200Response> 
     */
    open class func createAudienceWithRequestBuilder(spaceId: String, createAudienceBetaInput: CreateAudienceBetaInput) -> RequestBuilder<CreateAudience200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createAudienceBetaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateAudience200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Create Audience Preview
     
     - parameter spaceId: (path)  
     - parameter createAudiencePreviewBetaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createAudiencePreview(spaceId: String, createAudiencePreviewBetaInput: CreateAudiencePreviewBetaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: CreateAudiencePreview200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return createAudiencePreviewWithRequestBuilder(spaceId: spaceId, createAudiencePreviewBetaInput: createAudiencePreviewBetaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Audience Preview
     - POST /spaces/{spaceId}/audiences/previews
     - Previews Audience.  • This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.  • When called, this endpoint may generate the `Audience Preview Created` event in the [audit trail](/tag/Audit-Trail).   The rate limit for this endpoint is 5 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information. This endpoint also has a rate limit of 700 requests per month per spaceId, which is lower than the default due to access pattern restrictions.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter createAudiencePreviewBetaInput: (body)  
     - returns: RequestBuilder<CreateAudiencePreview200Response> 
     */
    open class func createAudiencePreviewWithRequestBuilder(spaceId: String, createAudiencePreviewBetaInput: CreateAudiencePreviewBetaInput) -> RequestBuilder<CreateAudiencePreview200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/previews"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createAudiencePreviewBetaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateAudiencePreview200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Force Execute Audience Run
     
     - parameter spaceId: (path)  
     - parameter audienceId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func forceExecuteAudienceRun(spaceId: String, audienceId: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ForceExecuteAudienceRun200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return forceExecuteAudienceRunWithRequestBuilder(spaceId: spaceId, audienceId: audienceId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Force Execute Audience Run
     - POST /spaces/{spaceId}/audiences/{audienceId}/runs
     - Forces execution of an audience run.  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.  • When called, this endpoint may generate the `Audience Run Forced` event in the [audit trail](/tag/Audit-Trail).
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter audienceId: (path)  
     - returns: RequestBuilder<ForceExecuteAudienceRun200Response> 
     */
    open class func forceExecuteAudienceRunWithRequestBuilder(spaceId: String, audienceId: String) -> RequestBuilder<ForceExecuteAudienceRun200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/{audienceId}/runs"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let audienceIdPreEscape = "\(APIHelper.mapValueToPathItem(audienceId))"
        let audienceIdPostEscape = audienceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{audienceId}", with: audienceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ForceExecuteAudienceRun200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     * enum for parameter include
     */
    public enum Include_getAudience: String, CaseIterable {
        case schedules = "schedules"
    }

    /**
     Get Audience
     
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter include: (query) Additional resource to include, support schedules only.  This parameter exists in alpha. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getAudience(spaceId: String, id: String, include: Include_getAudience? = nil, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: GetAudience200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getAudienceWithRequestBuilder(spaceId: spaceId, id: id, include: include).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Audience
     - GET /spaces/{spaceId}/audiences/{id}
     - Returns the Audience by id and spaceId. Supports including audience schedules using `?include=schedules`.  • This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.   The rate limit for this endpoint is 100 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter include: (query) Additional resource to include, support schedules only.  This parameter exists in alpha. (optional)
     - returns: RequestBuilder<GetAudience200Response> 
     */
    open class func getAudienceWithRequestBuilder(spaceId: String, id: String, include: Include_getAudience? = nil) -> RequestBuilder<GetAudience200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/{id}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": include?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetAudience200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Audience Preview
     
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getAudiencePreview(spaceId: String, id: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: GetAudiencePreview200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getAudiencePreviewWithRequestBuilder(spaceId: spaceId, id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Audience Preview
     - GET /spaces/{spaceId}/audiences/previews/{id}
     - Reads the results of an audience preview.  • This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.   The rate limit for this endpoint is 100 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - returns: RequestBuilder<GetAudiencePreview200Response> 
     */
    open class func getAudiencePreviewWithRequestBuilder(spaceId: String, id: String) -> RequestBuilder<GetAudiencePreview200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/previews/{id}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetAudiencePreview200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Audience Schedule from Space And Audience
     
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter scheduleId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getAudienceScheduleFromSpaceAndAudience(spaceId: String, id: String, scheduleId: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: GetAudienceScheduleFromSpaceAndAudience200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getAudienceScheduleFromSpaceAndAudienceWithRequestBuilder(spaceId: spaceId, id: id, scheduleId: scheduleId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Audience Schedule from Space And Audience
     - GET /spaces/{spaceId}/audiences/{id}/schedules/{scheduleId}
     - Returns the schedule for the given audience and scheduleId.  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter scheduleId: (path)  
     - returns: RequestBuilder<GetAudienceScheduleFromSpaceAndAudience200Response> 
     */
    open class func getAudienceScheduleFromSpaceAndAudienceWithRequestBuilder(spaceId: String, id: String, scheduleId: String) -> RequestBuilder<GetAudienceScheduleFromSpaceAndAudience200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/{id}/schedules/{scheduleId}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(APIHelper.mapValueToPathItem(scheduleId))"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetAudienceScheduleFromSpaceAndAudience200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Audience Consumers from Space And Audience
     
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter pagination: (query) Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)
     - parameter search: (query) Optional search criteria  This parameter exists in alpha. (optional)
     - parameter sort: (query) Optional sort criteria  This parameter exists in alpha. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listAudienceConsumersFromSpaceAndAudience(spaceId: String, id: String, pagination: PaginationInput? = nil, search: ListAudienceSearchInput? = nil, sort: ListAudienceConsumersSortInput? = nil, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ListAudienceConsumersFromSpaceAndAudience200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listAudienceConsumersFromSpaceAndAudienceWithRequestBuilder(spaceId: spaceId, id: id, pagination: pagination, search: search, sort: sort).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Audience Consumers from Space And Audience
     - GET /spaces/{spaceId}/audiences/{id}/audience-references
     - Returns the list of consumers for the given audience.  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.   The rate limit for this endpoint is 25 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter pagination: (query) Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)
     - parameter search: (query) Optional search criteria  This parameter exists in alpha. (optional)
     - parameter sort: (query) Optional sort criteria  This parameter exists in alpha. (optional)
     - returns: RequestBuilder<ListAudienceConsumersFromSpaceAndAudience200Response> 
     */
    open class func listAudienceConsumersFromSpaceAndAudienceWithRequestBuilder(spaceId: String, id: String, pagination: PaginationInput? = nil, search: ListAudienceSearchInput? = nil, sort: ListAudienceConsumersSortInput? = nil) -> RequestBuilder<ListAudienceConsumersFromSpaceAndAudience200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/{id}/audience-references"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "pagination": pagination?.encodeToJSON(),
            "search": search?.encodeToJSON(),
            "sort": sort?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListAudienceConsumersFromSpaceAndAudience200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Audience Schedules from Space And Audience
     
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listAudienceSchedulesFromSpaceAndAudience(spaceId: String, id: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ListAudienceSchedulesFromSpaceAndAudience200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listAudienceSchedulesFromSpaceAndAudienceWithRequestBuilder(spaceId: spaceId, id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Audience Schedules from Space And Audience
     - GET /spaces/{spaceId}/audiences/{id}/schedules
     - Returns the list of schedules for the given audience.  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - returns: RequestBuilder<ListAudienceSchedulesFromSpaceAndAudience200Response> 
     */
    open class func listAudienceSchedulesFromSpaceAndAudienceWithRequestBuilder(spaceId: String, id: String) -> RequestBuilder<ListAudienceSchedulesFromSpaceAndAudience200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/{id}/schedules"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListAudienceSchedulesFromSpaceAndAudience200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     * enum for parameter include
     */
    public enum Include_listAudiences: String, CaseIterable {
        case schedules = "schedules"
    }

    /**
     List Audiences
     
     - parameter spaceId: (path)  
     - parameter search: (query) Optional search criteria  This parameter exists in alpha. (optional)
     - parameter pagination: (query) Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)
     - parameter include: (query) Additional resource to include, support schedules only.  This parameter exists in alpha. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listAudiences(spaceId: String, search: ListAudienceSearchInput? = nil, pagination: ListAudiencesPaginationInput? = nil, include: Include_listAudiences? = nil, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ListAudiences200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listAudiencesWithRequestBuilder(spaceId: spaceId, search: search, pagination: pagination, include: include).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Audiences
     - GET /spaces/{spaceId}/audiences
     - Returns Audiences by spaceId. Supports including audience schedules using `?include=schedules`.  • This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.   The rate limit for this endpoint is 25 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter search: (query) Optional search criteria  This parameter exists in alpha. (optional)
     - parameter pagination: (query) Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)
     - parameter include: (query) Additional resource to include, support schedules only.  This parameter exists in alpha. (optional)
     - returns: RequestBuilder<ListAudiences200Response> 
     */
    open class func listAudiencesWithRequestBuilder(spaceId: String, search: ListAudienceSearchInput? = nil, pagination: ListAudiencesPaginationInput? = nil, include: Include_listAudiences? = nil) -> RequestBuilder<ListAudiences200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "search": search?.encodeToJSON(),
            "pagination": pagination?.encodeToJSON(),
            "include": include?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListAudiences200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Remove Audience from Space
     
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func removeAudienceFromSpace(spaceId: String, id: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: RemoveAudienceFromSpace200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return removeAudienceFromSpaceWithRequestBuilder(spaceId: spaceId, id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Remove Audience from Space
     - DELETE /spaces/{spaceId}/audiences/{id}
     - Deletes an Audience by id and spaceId.  • This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.  • When called, this endpoint may generate the `Audience Deleted` event in the [audit trail](/tag/Audit-Trail).   The rate limit for this endpoint is 20 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - returns: RequestBuilder<RemoveAudienceFromSpace200Response> 
     */
    open class func removeAudienceFromSpaceWithRequestBuilder(spaceId: String, id: String) -> RequestBuilder<RemoveAudienceFromSpace200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/{id}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RemoveAudienceFromSpace200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Audience for Space
     
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter updateAudienceForSpaceBetaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateAudienceForSpace(spaceId: String, id: String, updateAudienceForSpaceBetaInput: UpdateAudienceForSpaceBetaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateAudienceForSpace200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return updateAudienceForSpaceWithRequestBuilder(spaceId: spaceId, id: id, updateAudienceForSpaceBetaInput: updateAudienceForSpaceBetaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Audience for Space
     - PATCH /spaces/{spaceId}/audiences/{id}
     - Updates the Audience.  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.  • When called, this endpoint may generate the `Audience Modified` event in the [audit trail](/tag/Audit-Trail).  • Note that when an Audience is updated, the Audience will be locked from future edits until the changes have been incorporated. You can find more information [in the Segment docs](https://segment-docs.netlify.app/docs/engage/audiences/#editing-realtime-audiences-and-traits).  Note: The definition for an Audience updated using the API is not editable through the Segment App.   The rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter updateAudienceForSpaceBetaInput: (body)  
     - returns: RequestBuilder<UpdateAudienceForSpace200Response> 
     */
    open class func updateAudienceForSpaceWithRequestBuilder(spaceId: String, id: String, updateAudienceForSpaceBetaInput: UpdateAudienceForSpaceBetaInput) -> RequestBuilder<UpdateAudienceForSpace200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/{id}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateAudienceForSpaceBetaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateAudienceForSpace200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Audience Schedule for Audience
     
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter scheduleId: (path)  
     - parameter updateAudienceScheduleForAudienceAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateAudienceScheduleForAudience(spaceId: String, id: String, scheduleId: String, updateAudienceScheduleForAudienceAlphaInput: UpdateAudienceScheduleForAudienceAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateAudienceScheduleForAudience200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return updateAudienceScheduleForAudienceWithRequestBuilder(spaceId: spaceId, id: id, scheduleId: scheduleId, updateAudienceScheduleForAudienceAlphaInput: updateAudienceScheduleForAudienceAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Audience Schedule for Audience
     - PATCH /spaces/{spaceId}/audiences/{id}/schedules/{scheduleId}
     - Updates an audience schedule for a Linked Audience (audienceType = LINKED).  • This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.   • In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter id: (path)  
     - parameter scheduleId: (path)  
     - parameter updateAudienceScheduleForAudienceAlphaInput: (body)  
     - returns: RequestBuilder<UpdateAudienceScheduleForAudience200Response> 
     */
    open class func updateAudienceScheduleForAudienceWithRequestBuilder(spaceId: String, id: String, scheduleId: String, updateAudienceScheduleForAudienceAlphaInput: UpdateAudienceScheduleForAudienceAlphaInput) -> RequestBuilder<UpdateAudienceScheduleForAudience200Response> {
        var localVariablePath = "/spaces/{spaceId}/audiences/{id}/schedules/{scheduleId}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let scheduleIdPreEscape = "\(APIHelper.mapValueToPathItem(scheduleId))"
        let scheduleIdPostEscape = scheduleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{scheduleId}", with: scheduleIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateAudienceScheduleForAudienceAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateAudienceScheduleForAudience200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
