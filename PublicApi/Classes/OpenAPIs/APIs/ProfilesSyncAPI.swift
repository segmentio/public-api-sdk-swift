//
// ProfilesSyncAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ProfilesSyncAPI {

    /**
     Create Profiles Warehouse
     
     - parameter spaceId: (path)  
     - parameter createProfilesWarehouseAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createProfilesWarehouse(spaceId: String, createProfilesWarehouseAlphaInput: CreateProfilesWarehouseAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: CreateProfilesWarehouse200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return createProfilesWarehouseWithRequestBuilder(spaceId: spaceId, createProfilesWarehouseAlphaInput: createProfilesWarehouseAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Profiles Warehouse
     - POST /spaces/{spaceId}/profiles-warehouses
     - Creates a new Profiles Warehouse.  â€¢ When called, this endpoint may generate the `Profiles Sync Warehouse Created` event in the [audit trail](/tag/Audit-Trail).       
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter createProfilesWarehouseAlphaInput: (body)  
     - returns: RequestBuilder<CreateProfilesWarehouse200Response> 
     */
    open class func createProfilesWarehouseWithRequestBuilder(spaceId: String, createProfilesWarehouseAlphaInput: CreateProfilesWarehouseAlphaInput) -> RequestBuilder<CreateProfilesWarehouse200Response> {
        var localVariablePath = "/spaces/{spaceId}/profiles-warehouses"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createProfilesWarehouseAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateProfilesWarehouse200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
