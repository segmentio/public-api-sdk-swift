//
// ProfilesSyncAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ProfilesSyncAPI {

    /**
     Create Profiles Warehouse
     
     - parameter spaceId: (path)  
     - parameter createProfilesWarehouseAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createProfilesWarehouse(spaceId: String, createProfilesWarehouseAlphaInput: CreateProfilesWarehouseAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: CreateProfilesWarehouse200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return createProfilesWarehouseWithRequestBuilder(spaceId: spaceId, createProfilesWarehouseAlphaInput: createProfilesWarehouseAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Profiles Warehouse
     - POST /spaces/{spaceId}/profiles-warehouses
     - Creates a new Profiles Warehouse.  • When called, this endpoint may generate the `Profiles Sync Warehouse Created` event in the [audit trail](/tag/Audit-Trail).       
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter createProfilesWarehouseAlphaInput: (body)  
     - returns: RequestBuilder<CreateProfilesWarehouse200Response> 
     */
    open class func createProfilesWarehouseWithRequestBuilder(spaceId: String, createProfilesWarehouseAlphaInput: CreateProfilesWarehouseAlphaInput) -> RequestBuilder<CreateProfilesWarehouse200Response> {
        var localVariablePath = "/spaces/{spaceId}/profiles-warehouses"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createProfilesWarehouseAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateProfilesWarehouse200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Profiles Warehouse in Space
     
     - parameter spaceId: (path)  
     - parameter pagination: (query) Defines the pagination parameters.  This parameter exists in alpha. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listProfilesWarehouseInSpace(spaceId: String, pagination: PaginationInput? = nil, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ListProfilesWarehouseInSpace200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listProfilesWarehouseInSpaceWithRequestBuilder(spaceId: spaceId, pagination: pagination).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Profiles Warehouse in Space
     - GET /spaces/{spaceId}/profiles-warehouses
     - Lists all Profile Warehouses for a given space id.  • When called, this endpoint may generate the `Profiles Sync Warehouse Retrieved` event in the [audit trail](/tag/Audit-Trail).       
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter pagination: (query) Defines the pagination parameters.  This parameter exists in alpha. (optional)
     - returns: RequestBuilder<ListProfilesWarehouseInSpace200Response> 
     */
    open class func listProfilesWarehouseInSpaceWithRequestBuilder(spaceId: String, pagination: PaginationInput? = nil) -> RequestBuilder<ListProfilesWarehouseInSpace200Response> {
        var localVariablePath = "/spaces/{spaceId}/profiles-warehouses"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "pagination": pagination?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListProfilesWarehouseInSpace200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Selective Syncs from Warehouse And Space
     
     - parameter spaceId: (path)  
     - parameter warehouseId: (path)  
     - parameter pagination: (query) Defines the pagination parameters.  This parameter exists in alpha. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listSelectiveSyncsFromWarehouseAndSpace(spaceId: String, warehouseId: String, pagination: PaginationInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ListSelectiveSyncsFromWarehouseAndSpace200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listSelectiveSyncsFromWarehouseAndSpaceWithRequestBuilder(spaceId: spaceId, warehouseId: warehouseId, pagination: pagination).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Selective Syncs from Warehouse And Space
     - GET /spaces/{spaceId}/profiles-warehouses/{warehouseId}/selective-syncs
     - Returns the schema for a Space Warehouse connection, including Collections and Properties.
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter warehouseId: (path)  
     - parameter pagination: (query) Defines the pagination parameters.  This parameter exists in alpha. 
     - returns: RequestBuilder<ListSelectiveSyncsFromWarehouseAndSpace200Response> 
     */
    open class func listSelectiveSyncsFromWarehouseAndSpaceWithRequestBuilder(spaceId: String, warehouseId: String, pagination: PaginationInput) -> RequestBuilder<ListSelectiveSyncsFromWarehouseAndSpace200Response> {
        var localVariablePath = "/spaces/{spaceId}/profiles-warehouses/{warehouseId}/selective-syncs"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let warehouseIdPreEscape = "\(APIHelper.mapValueToPathItem(warehouseId))"
        let warehouseIdPostEscape = warehouseIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{warehouseId}", with: warehouseIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "pagination": pagination.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListSelectiveSyncsFromWarehouseAndSpace200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Remove Profiles Warehouse from Space
     
     - parameter spaceId: (path)  
     - parameter warehouseId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func removeProfilesWarehouseFromSpace(spaceId: String, warehouseId: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: RemoveProfilesWarehouseFromSpace200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return removeProfilesWarehouseFromSpaceWithRequestBuilder(spaceId: spaceId, warehouseId: warehouseId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Remove Profiles Warehouse from Space
     - DELETE /spaces/{spaceId}/profiles-warehouses/{warehouseId}
     - Deletes an existing Profiles Warehouse.  • When called, this endpoint may generate the `Profiles Sync Warehouse Deleted` event in the [audit trail](/tag/Audit-Trail).       
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter warehouseId: (path)  
     - returns: RequestBuilder<RemoveProfilesWarehouseFromSpace200Response> 
     */
    open class func removeProfilesWarehouseFromSpaceWithRequestBuilder(spaceId: String, warehouseId: String) -> RequestBuilder<RemoveProfilesWarehouseFromSpace200Response> {
        var localVariablePath = "/spaces/{spaceId}/profiles-warehouses/{warehouseId}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let warehouseIdPreEscape = "\(APIHelper.mapValueToPathItem(warehouseId))"
        let warehouseIdPostEscape = warehouseIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{warehouseId}", with: warehouseIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RemoveProfilesWarehouseFromSpace200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Profiles Warehouse for Space Warehouse
     
     - parameter spaceId: (path)  
     - parameter warehouseId: (path)  
     - parameter updateProfilesWarehouseForSpaceWarehouseAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateProfilesWarehouseForSpaceWarehouse(spaceId: String, warehouseId: String, updateProfilesWarehouseForSpaceWarehouseAlphaInput: UpdateProfilesWarehouseForSpaceWarehouseAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateProfilesWarehouseForSpaceWarehouse200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return updateProfilesWarehouseForSpaceWarehouseWithRequestBuilder(spaceId: spaceId, warehouseId: warehouseId, updateProfilesWarehouseForSpaceWarehouseAlphaInput: updateProfilesWarehouseForSpaceWarehouseAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Profiles Warehouse for Space Warehouse
     - PATCH /spaces/{spaceId}/profiles-warehouses/{warehouseId}
     - Updates an existing Profiles Warehouse.  • When called, this endpoint may generate the `Profiles Sync Warehouse Updated` event in the [audit trail](/tag/Audit-Trail).       
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter warehouseId: (path)  
     - parameter updateProfilesWarehouseForSpaceWarehouseAlphaInput: (body)  
     - returns: RequestBuilder<UpdateProfilesWarehouseForSpaceWarehouse200Response> 
     */
    open class func updateProfilesWarehouseForSpaceWarehouseWithRequestBuilder(spaceId: String, warehouseId: String, updateProfilesWarehouseForSpaceWarehouseAlphaInput: UpdateProfilesWarehouseForSpaceWarehouseAlphaInput) -> RequestBuilder<UpdateProfilesWarehouseForSpaceWarehouse200Response> {
        var localVariablePath = "/spaces/{spaceId}/profiles-warehouses/{warehouseId}"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let warehouseIdPreEscape = "\(APIHelper.mapValueToPathItem(warehouseId))"
        let warehouseIdPostEscape = warehouseIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{warehouseId}", with: warehouseIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateProfilesWarehouseForSpaceWarehouseAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateProfilesWarehouseForSpaceWarehouse200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update Selective Sync for Warehouse And Space
     
     - parameter spaceId: (path)  
     - parameter warehouseId: (path)  
     - parameter updateSelectiveSyncForWarehouseAndSpaceAlphaInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateSelectiveSyncForWarehouseAndSpace(spaceId: String, warehouseId: String, updateSelectiveSyncForWarehouseAndSpaceAlphaInput: UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateSelectiveSyncForWarehouseAndSpace200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return updateSelectiveSyncForWarehouseAndSpaceWithRequestBuilder(spaceId: spaceId, warehouseId: warehouseId, updateSelectiveSyncForWarehouseAndSpaceAlphaInput: updateSelectiveSyncForWarehouseAndSpaceAlphaInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Selective Sync for Warehouse And Space
     - PATCH /spaces/{spaceId}/profiles-warehouses/{warehouseId}/selective-syncs
     - Updates the schema for a Space Warehouse connection, including Collections and Properties.  • When called, this endpoint may generate the `Profiles Sync Warehouse Modified` event in the [audit trail](/tag/Audit-Trail).       
     - BASIC:
       - type: http
       - name: token
     - parameter spaceId: (path)  
     - parameter warehouseId: (path)  
     - parameter updateSelectiveSyncForWarehouseAndSpaceAlphaInput: (body)  
     - returns: RequestBuilder<UpdateSelectiveSyncForWarehouseAndSpace200Response> 
     */
    open class func updateSelectiveSyncForWarehouseAndSpaceWithRequestBuilder(spaceId: String, warehouseId: String, updateSelectiveSyncForWarehouseAndSpaceAlphaInput: UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput) -> RequestBuilder<UpdateSelectiveSyncForWarehouseAndSpace200Response> {
        var localVariablePath = "/spaces/{spaceId}/profiles-warehouses/{warehouseId}/selective-syncs"
        let spaceIdPreEscape = "\(APIHelper.mapValueToPathItem(spaceId))"
        let spaceIdPostEscape = spaceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{spaceId}", with: spaceIdPostEscape, options: .literal, range: nil)
        let warehouseIdPreEscape = "\(APIHelper.mapValueToPathItem(warehouseId))"
        let warehouseIdPostEscape = warehouseIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{warehouseId}", with: warehouseIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateSelectiveSyncForWarehouseAndSpaceAlphaInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateSelectiveSyncForWarehouseAndSpace200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
