//
// IAMGroupsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class IAMGroupsAPI {

    /**
     Add Permissions to User Group
     
     - parameter userGroupId: (path)  
     - parameter addPermissionsToUserGroupV1Input: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func addPermissionsToUserGroup(userGroupId: String, addPermissionsToUserGroupV1Input: AddPermissionsToUserGroupV1Input, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: AddPermissionsToUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return addPermissionsToUserGroupWithRequestBuilder(userGroupId: userGroupId, addPermissionsToUserGroupV1Input: addPermissionsToUserGroupV1Input).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Add Permissions to User Group
     - POST /groups/{userGroupId}/permissions
     - Adds a list of access permissions to a user group.    • When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Policy Created * User Group Policy Updated          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - parameter addPermissionsToUserGroupV1Input: (body)  
     - returns: RequestBuilder<AddPermissionsToUserGroup200Response> 
     */
    open class func addPermissionsToUserGroupWithRequestBuilder(userGroupId: String, addPermissionsToUserGroupV1Input: AddPermissionsToUserGroupV1Input) -> RequestBuilder<AddPermissionsToUserGroup200Response> {
        var localVariablePath = "/groups/{userGroupId}/permissions"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: addPermissionsToUserGroupV1Input)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AddPermissionsToUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Add Users to User Group
     
     - parameter userGroupId: (path)  
     - parameter addUsersToUserGroupV1Input: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func addUsersToUserGroup(userGroupId: String, addUsersToUserGroupV1Input: AddUsersToUserGroupV1Input, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: AddUsersToUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return addUsersToUserGroupWithRequestBuilder(userGroupId: userGroupId, addUsersToUserGroupV1Input: addUsersToUserGroupV1Input).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Add Users to User Group
     - POST /groups/{userGroupId}/users
     - Adds a list of users or invites to a user group.    • When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Subjects Added to Group * User Added To User Group          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - parameter addUsersToUserGroupV1Input: (body)  
     - returns: RequestBuilder<AddUsersToUserGroup200Response> 
     */
    open class func addUsersToUserGroupWithRequestBuilder(userGroupId: String, addUsersToUserGroupV1Input: AddUsersToUserGroupV1Input) -> RequestBuilder<AddUsersToUserGroup200Response> {
        var localVariablePath = "/groups/{userGroupId}/users"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: addUsersToUserGroupV1Input)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AddUsersToUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Create User Group
     
     - parameter createUserGroupV1Input: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createUserGroup(createUserGroupV1Input: CreateUserGroupV1Input, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: CreateUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return createUserGroupWithRequestBuilder(createUserGroupV1Input: createUserGroupV1Input).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create User Group
     - POST /groups
     - Creates a user group.    • When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* User Group Created * Policy Created          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter createUserGroupV1Input: (body)  
     - returns: RequestBuilder<CreateUserGroup200Response> 
     */
    open class func createUserGroupWithRequestBuilder(createUserGroupV1Input: CreateUserGroupV1Input) -> RequestBuilder<CreateUserGroup200Response> {
        let localVariablePath = "/groups"
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createUserGroupV1Input)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Delete User Group
     
     - parameter userGroupId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func deleteUserGroup(userGroupId: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: DeleteUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return deleteUserGroupWithRequestBuilder(userGroupId: userGroupId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete User Group
     - DELETE /groups/{userGroupId}
     - Removes a user group from a Workspace.    • When called, this endpoint may generate the `User Group Deleted` event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - returns: RequestBuilder<DeleteUserGroup200Response> 
     */
    open class func deleteUserGroupWithRequestBuilder(userGroupId: String) -> RequestBuilder<DeleteUserGroup200Response> {
        var localVariablePath = "/groups/{userGroupId}"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DeleteUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get User Group
     
     - parameter userGroupId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getUserGroup(userGroupId: String, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: GetUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getUserGroupWithRequestBuilder(userGroupId: userGroupId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get User Group
     - GET /groups/{userGroupId}
     - Returns a user group.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - returns: RequestBuilder<GetUserGroup200Response> 
     */
    open class func getUserGroupWithRequestBuilder(userGroupId: String) -> RequestBuilder<GetUserGroup200Response> {
        var localVariablePath = "/groups/{userGroupId}"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Invites from User Group
     
     - parameter userGroupId: (path)  
     - parameter pagination: (query) Pagination for invites to the group.  This parameter exists in v1. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listInvitesFromUserGroup(userGroupId: String, pagination: PaginationInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ListInvitesFromUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listInvitesFromUserGroupWithRequestBuilder(userGroupId: userGroupId, pagination: pagination).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Invites from User Group
     - GET /groups/{userGroupId}/invites
     - Returns the emails of invitees to a user group.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - parameter pagination: (query) Pagination for invites to the group.  This parameter exists in v1. 
     - returns: RequestBuilder<ListInvitesFromUserGroup200Response> 
     */
    open class func listInvitesFromUserGroupWithRequestBuilder(userGroupId: String, pagination: PaginationInput) -> RequestBuilder<ListInvitesFromUserGroup200Response> {
        var localVariablePath = "/groups/{userGroupId}/invites"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "pagination": pagination.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListInvitesFromUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List User Groups
     
     - parameter pagination: (query) Pagination for user groups.  This parameter exists in v1. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listUserGroups(pagination: PaginationInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ListUserGroups200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listUserGroupsWithRequestBuilder(pagination: pagination).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List User Groups
     - GET /groups
     - Returns all user groups.
     - BASIC:
       - type: http
       - name: token
     - parameter pagination: (query) Pagination for user groups.  This parameter exists in v1. 
     - returns: RequestBuilder<ListUserGroups200Response> 
     */
    open class func listUserGroupsWithRequestBuilder(pagination: PaginationInput) -> RequestBuilder<ListUserGroups200Response> {
        let localVariablePath = "/groups"
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "pagination": pagination.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListUserGroups200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Users from User Group
     
     - parameter userGroupId: (path)  
     - parameter pagination: (query) Pagination for members of a group.  This parameter exists in v1. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listUsersFromUserGroup(userGroupId: String, pagination: PaginationInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ListUsersFromUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listUsersFromUserGroupWithRequestBuilder(userGroupId: userGroupId, pagination: pagination).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Users from User Group
     - GET /groups/{userGroupId}/users
     - Returns users belonging to a user group.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - parameter pagination: (query) Pagination for members of a group.  This parameter exists in v1. 
     - returns: RequestBuilder<ListUsersFromUserGroup200Response> 
     */
    open class func listUsersFromUserGroupWithRequestBuilder(userGroupId: String, pagination: PaginationInput) -> RequestBuilder<ListUsersFromUserGroup200Response> {
        var localVariablePath = "/groups/{userGroupId}/users"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "pagination": pagination.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListUsersFromUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Remove Users from User Group
     
     - parameter userGroupId: (path)  
     - parameter emails: (query) The list of emails to remove from the user group.  This parameter exists in v1. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func removeUsersFromUserGroup(userGroupId: String, emails: [String], apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: RemoveUsersFromUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return removeUsersFromUserGroupWithRequestBuilder(userGroupId: userGroupId, emails: emails).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Remove Users from User Group
     - DELETE /group/{userGroupId}/users
     - Removes one or multiple users or invites from a user group by email.    • When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Group Memberships Deleted * User Removed From User Group          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - parameter emails: (query) The list of emails to remove from the user group.  This parameter exists in v1. 
     - returns: RequestBuilder<RemoveUsersFromUserGroup200Response> 
     */
    open class func removeUsersFromUserGroupWithRequestBuilder(userGroupId: String, emails: [String]) -> RequestBuilder<RemoveUsersFromUserGroup200Response> {
        var localVariablePath = "/group/{userGroupId}/users"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "emails": emails.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RemoveUsersFromUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Replace Permissions for User Group
     
     - parameter userGroupId: (path)  
     - parameter replacePermissionsForUserGroupV1Input: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func replacePermissionsForUserGroup(userGroupId: String, replacePermissionsForUserGroupV1Input: ReplacePermissionsForUserGroupV1Input, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ReplacePermissionsForUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return replacePermissionsForUserGroupWithRequestBuilder(userGroupId: userGroupId, replacePermissionsForUserGroupV1Input: replacePermissionsForUserGroupV1Input).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Replace Permissions for User Group
     - PUT /groups/{userGroupId}/permissions
     - Updates the list of access permissions for a user group.    • When called, this endpoint may generate the `Policy Deleted` event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - parameter replacePermissionsForUserGroupV1Input: (body)  
     - returns: RequestBuilder<ReplacePermissionsForUserGroup200Response> 
     */
    open class func replacePermissionsForUserGroupWithRequestBuilder(userGroupId: String, replacePermissionsForUserGroupV1Input: ReplacePermissionsForUserGroupV1Input) -> RequestBuilder<ReplacePermissionsForUserGroup200Response> {
        var localVariablePath = "/groups/{userGroupId}/permissions"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: replacePermissionsForUserGroupV1Input)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ReplacePermissionsForUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Replace Users in User Group
     
     - parameter userGroupId: (path)  
     - parameter replaceUsersInUserGroupV1Input: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func replaceUsersInUserGroup(userGroupId: String, replaceUsersInUserGroupV1Input: ReplaceUsersInUserGroupV1Input, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: ReplaceUsersInUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return replaceUsersInUserGroupWithRequestBuilder(userGroupId: userGroupId, replaceUsersInUserGroupV1Input: replaceUsersInUserGroupV1Input).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Replace Users in User Group
     - PUT /group/{userGroupId}/users
     - Replaces the members of a user group by email.    • When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Subjects Added to Group * User Added To User Group * Group Memberships Deleted          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - parameter replaceUsersInUserGroupV1Input: (body)  
     - returns: RequestBuilder<ReplaceUsersInUserGroup200Response> 
     */
    open class func replaceUsersInUserGroupWithRequestBuilder(userGroupId: String, replaceUsersInUserGroupV1Input: ReplaceUsersInUserGroupV1Input) -> RequestBuilder<ReplaceUsersInUserGroup200Response> {
        var localVariablePath = "/group/{userGroupId}/users"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: replaceUsersInUserGroupV1Input)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ReplaceUsersInUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Update User Group
     
     - parameter userGroupId: (path)  
     - parameter updateUserGroupV1Input: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateUserGroup(userGroupId: String, updateUserGroupV1Input: UpdateUserGroupV1Input, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateUserGroup200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return updateUserGroupWithRequestBuilder(userGroupId: userGroupId, updateUserGroupV1Input: updateUserGroupV1Input).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update User Group
     - PATCH /groups/{userGroupId}
     - Updates a user group for a Workspace.    • When called, this endpoint may generate the `User Group Updated` event in the [audit trail](/tag/Audit-Trail).          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     - BASIC:
       - type: http
       - name: token
     - parameter userGroupId: (path)  
     - parameter updateUserGroupV1Input: (body)  
     - returns: RequestBuilder<UpdateUserGroup200Response> 
     */
    open class func updateUserGroupWithRequestBuilder(userGroupId: String, updateUserGroupV1Input: UpdateUserGroupV1Input) -> RequestBuilder<UpdateUserGroup200Response> {
        var localVariablePath = "/groups/{userGroupId}"
        let userGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(userGroupId))"
        let userGroupIdPostEscape = userGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userGroupId}", with: userGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateUserGroupV1Input)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateUserGroup200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
