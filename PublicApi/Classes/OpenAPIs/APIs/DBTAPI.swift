//
// DBTAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DBTAPI {

    /**
     Create Dbt Model Sync Trigger
     
     - parameter createDbtModelSyncTriggerInput: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createDbtModelSyncTrigger(createDbtModelSyncTriggerInput: CreateDbtModelSyncTriggerInput, apiResponseQueue: DispatchQueue = PublicApiAPI.apiResponseQueue, completion: @escaping ((_ data: CreateDbtModelSyncTrigger200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return createDbtModelSyncTriggerWithRequestBuilder(createDbtModelSyncTriggerInput: createDbtModelSyncTriggerInput).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Dbt Model Sync Trigger
     - POST /dbt-model-syncs/trigger
     - Creates a trigger for a new dbt model sync for a Source.
     - BASIC:
       - type: http
       - name: token
     - parameter createDbtModelSyncTriggerInput: (body)  
     - returns: RequestBuilder<CreateDbtModelSyncTrigger200Response> 
     */
    open class func createDbtModelSyncTriggerWithRequestBuilder(createDbtModelSyncTriggerInput: CreateDbtModelSyncTriggerInput) -> RequestBuilder<CreateDbtModelSyncTrigger200Response> {
        let localVariablePath = "/dbt-model-syncs/trigger"
        let localVariableURLString = PublicApiAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createDbtModelSyncTriggerInput)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateDbtModelSyncTrigger200Response>.Type = PublicApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
