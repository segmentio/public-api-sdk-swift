//
// UpdateActivationForAudienceAlphaInput.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Input to update an activation. */
public struct UpdateActivationForAudienceAlphaInput: Codable, JSONEncodable, Hashable {

    /** Determines whether an activation is enabled. */
    public var enabled: Bool?
    /** Activation name. */
    public var activationName: String?
    public var personalization: Personalization?
    public var destinationMapping: DestinationMapping?
    /** Whether to skip the first sync so the activation events are not generated on the first audience sync. Will only work if the Audience has not already synced. */
    public var performFirstSync: Bool?

    public init(enabled: Bool? = nil, activationName: String? = nil, personalization: Personalization? = nil, destinationMapping: DestinationMapping? = nil, performFirstSync: Bool? = nil) {
        self.enabled = enabled
        self.activationName = activationName
        self.personalization = personalization
        self.destinationMapping = destinationMapping
        self.performFirstSync = performFirstSync
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case enabled
        case activationName
        case personalization
        case destinationMapping
        case performFirstSync
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(activationName, forKey: .activationName)
        try container.encodeIfPresent(personalization, forKey: .personalization)
        try container.encodeIfPresent(destinationMapping, forKey: .destinationMapping)
        try container.encodeIfPresent(performFirstSync, forKey: .performFirstSync)
    }
}

