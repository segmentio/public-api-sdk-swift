//
// SupportedMethods.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Methods that this Destination supports.  Config API note: equal to &#x60;methods&#x60;. */
public struct SupportedMethods: Codable, JSONEncodable, Hashable {

    /** Identifies if the Destination supports the `pageview` method. */
    public var pageview: Bool?
    /** Identifies if the Destination supports the `identify` method. */
    public var identify: Bool?
    /** Identifies if the Destination supports the `alias` method. */
    public var alias: Bool?
    /** Identifies if the Destination supports the `track` method. */
    public var track: Bool?
    /** Identifies if the Destination supports the `group` method. */
    public var group: Bool?

    public init(pageview: Bool? = nil, identify: Bool? = nil, alias: Bool? = nil, track: Bool? = nil, group: Bool? = nil) {
        self.pageview = pageview
        self.identify = identify
        self.alias = alias
        self.track = track
        self.group = group
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pageview
        case identify
        case alias
        case track
        case group
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pageview, forKey: .pageview)
        try container.encodeIfPresent(identify, forKey: .identify)
        try container.encodeIfPresent(alias, forKey: .alias)
        try container.encodeIfPresent(track, forKey: .track)
        try container.encodeIfPresent(group, forKey: .group)
    }
}

