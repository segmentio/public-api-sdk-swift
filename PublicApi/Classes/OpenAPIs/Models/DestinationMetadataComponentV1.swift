//
// DestinationMetadataComponentV1.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Represents a component this Destination provides. */
public struct DestinationMetadataComponentV1: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case android = "ANDROID"
        case browser = "BROWSER"
        case ios = "IOS"
        case server = "SERVER"
    }
    public enum Owner: String, Codable, CaseIterable {
        case partner = "PARTNER"
        case segment = "SEGMENT"
    }
    /** The component type. */
    public var type: ModelType
    /** Link to the repository hosting the code for this component. */
    public var code: String
    /** The owner of this component. Either 'SEGMENT' or 'PARTNER'. */
    public var owner: Owner?

    public init(type: ModelType, code: String, owner: Owner? = nil) {
        self.type = type
        self.code = code
        self.owner = owner
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case code
        case owner
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(code, forKey: .code)
        try container.encodeIfPresent(owner, forKey: .owner)
    }
}

