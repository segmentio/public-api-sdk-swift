//
// CreateDestinationSubscriptionAlphaInput.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The basic input parameters for creating a Destination subscription. */
public struct CreateDestinationSubscriptionAlphaInput: Codable, JSONEncodable, Hashable {

    /** A user-defined name for the subscription. */
    public var name: String
    /** The associated action id the subscription should trigger. */
    public var actionId: String
    /** The FQL statement. */
    public var trigger: String
    /** Is the subscription enabled. */
    public var enabled: Bool
    /** The fields used for configuring this action. */
    public var settings: JSON?

    public init(name: String, actionId: String, trigger: String, enabled: Bool, settings: JSON? = nil) {
        self.name = name
        self.actionId = actionId
        self.trigger = trigger
        self.enabled = enabled
        self.settings = settings
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case actionId
        case trigger
        case enabled
        case settings
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(actionId, forKey: .actionId)
        try container.encode(trigger, forKey: .trigger)
        try container.encode(enabled, forKey: .enabled)
        try container.encodeIfPresent(settings, forKey: .settings)
    }
}

