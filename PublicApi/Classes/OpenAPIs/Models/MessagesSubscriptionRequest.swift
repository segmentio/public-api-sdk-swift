//
// MessagesSubscriptionRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MessagesSubscriptionRequest: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case androidPush = "ANDROID_PUSH"
        case email = "EMAIL"
        case iosPush = "IOS_PUSH"
        case sms = "SMS"
        case whatsapp = "WHATSAPP"
    }
    public enum Status: String, Codable, CaseIterable {
        case didNotSubscribe = "DID_NOT_SUBSCRIBE"
        case subscribed = "SUBSCRIBED"
        case unsubscribed = "UNSUBSCRIBED"
    }
    /** Key is the phone number or email. */
    public var key: String
    /** Type is communication medium used. */
    public var type: ModelType
    /** The user subscribed, unsubscribed, or on initial status globally. */
    public var status: Status?
    /** Optional groups subscription status. */
    public var groups: [GroupSubscriptionStatus]?

    public init(key: String, type: ModelType, status: Status? = nil, groups: [GroupSubscriptionStatus]? = nil) {
        self.key = key
        self.type = type
        self.status = status
        self.groups = groups
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case key
        case type
        case status
        case groups
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(key, forKey: .key)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(groups, forKey: .groups)
    }
}

