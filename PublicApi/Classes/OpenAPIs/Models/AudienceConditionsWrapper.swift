//
// AudienceConditionsWrapper.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A wrapper object containing compute conditions in a specific format. */
public struct AudienceConditionsWrapper: Codable, JSONEncodable, Hashable {

    public enum Format: String, Codable, CaseIterable {
        case ast = "AST"
        case cql = "CQL"
    }
    /** Discriminator field denoting what format the compute conditions are specified in. */
    public var format: Format
    /** Compute conditions specified in the form denoted by the 'format' discriminator field. */
    public var conditions: AnyCodable?

    public init(format: Format, conditions: AnyCodable?) {
        self.format = format
        self.conditions = conditions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case format
        case conditions
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(format, forKey: .format)
        try container.encode(conditions, forKey: .conditions)
    }
}

