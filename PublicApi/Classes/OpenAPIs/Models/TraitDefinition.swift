//
// TraitDefinition.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TraitDefinition: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case accounts = "accounts"
        case users = "users"
    }
    /** The underlying data type being aggregated for this computed trait.  Possible values: users, accounts. */
    public var type: ModelType
    /** The query language string defining the computed trait aggregation criteria. For guidance on using the query language, see the [Segment documentation site](https://segment.com/docs/api/public-api/query-language). */
    public var query: String

    public init(type: ModelType, query: String) {
        self.type = type
        self.query = query
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case query
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(query, forKey: .query)
    }
}

