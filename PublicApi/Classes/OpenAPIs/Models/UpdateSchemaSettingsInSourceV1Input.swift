//
// UpdateSchemaSettingsInSourceV1Input.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Input to update a Source&#39;s settings. */
public struct UpdateSchemaSettingsInSourceV1Input: Codable, JSONEncodable, Hashable {

    public var track: Track?
    public var identify: Identify?
    public var group: Group?
    /** Source id to forward violations to. */
    public var forwardingViolationsTo: String?
    /** Source id to forward blocked events to. */
    public var forwardingBlockedEventsTo: String?

    public init(track: Track? = nil, identify: Identify? = nil, group: Group? = nil, forwardingViolationsTo: String? = nil, forwardingBlockedEventsTo: String? = nil) {
        self.track = track
        self.identify = identify
        self.group = group
        self.forwardingViolationsTo = forwardingViolationsTo
        self.forwardingBlockedEventsTo = forwardingBlockedEventsTo
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case track
        case identify
        case group
        case forwardingViolationsTo
        case forwardingBlockedEventsTo
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(track, forKey: .track)
        try container.encodeIfPresent(identify, forKey: .identify)
        try container.encodeIfPresent(group, forKey: .group)
        try container.encodeIfPresent(forwardingViolationsTo, forKey: .forwardingViolationsTo)
        try container.encodeIfPresent(forwardingBlockedEventsTo, forKey: .forwardingBlockedEventsTo)
    }
}

