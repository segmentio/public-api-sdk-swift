//
// EventSourceV1.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Source represents a Segment Source. */
public struct EventSourceV1: Codable, JSONEncodable, Hashable {

    /** The id of the Source where the events came from. */
    public var id: String
    /** The name of the Source, if applicable. */
    public var name: String?
    /** The slug of the Source, if applicable. */
    public var slug: String?

    public init(id: String, name: String? = nil, slug: String? = nil) {
        self.id = id
        self.name = name
        self.slug = slug
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case slug
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(slug, forKey: .slug)
    }
}

