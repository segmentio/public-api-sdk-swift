//
// AudienceSchedule.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The audience schedule. */
public struct AudienceSchedule: Codable, JSONEncodable, Hashable {

    public enum Strategy: String, Codable, CaseIterable {
        case manual = "MANUAL"
        case periodic = "PERIODIC"
        case specificDays = "SPECIFIC_DAYS"
    }
    /** Distinct identifier for the schedule. */
    public var id: String
    /** Strategy of the audience schedule (manual, periodic, or specific days). */
    public var strategy: Strategy
    public var config: Config?
    /** Whether the schedule is enabled. */
    public var enabled: Bool
    /** The next scheduled execution time (RFC3339). */
    public var nextExecution: String

    public init(id: String, strategy: Strategy, config: Config? = nil, enabled: Bool, nextExecution: String) {
        self.id = id
        self.strategy = strategy
        self.config = config
        self.enabled = enabled
        self.nextExecution = nextExecution
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case strategy
        case config
        case enabled
        case nextExecution
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(strategy, forKey: .strategy)
        try container.encodeIfPresent(config, forKey: .config)
        try container.encode(enabled, forKey: .enabled)
        try container.encode(nextExecution, forKey: .nextExecution)
    }
}

