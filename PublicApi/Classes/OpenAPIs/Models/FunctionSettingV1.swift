//
// FunctionSettingV1.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FunctionSettingV1: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case array = "ARRAY"
        case boolean = "BOOLEAN"
        case string = "STRING"
        case textMap = "TEXT_MAP"
    }
    /** The name of this Function Setting. */
    public var name: String
    /** The label for this Function Setting. */
    public var label: String
    /** A description of this Function Setting. */
    public var description: String
    /** The type of this Function Setting. */
    public var type: ModelType
    /** Whether this Function Setting is required. */
    public var _required: Bool
    /** Whether this Function Setting contains sensitive information. */
    public var sensitive: Bool

    public init(name: String, label: String, description: String, type: ModelType, _required: Bool, sensitive: Bool) {
        self.name = name
        self.label = label
        self.description = description
        self.type = type
        self._required = _required
        self.sensitive = sensitive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case label
        case description
        case type
        case _required = "required"
        case sensitive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(label, forKey: .label)
        try container.encode(description, forKey: .description)
        try container.encode(type, forKey: .type)
        try container.encode(_required, forKey: ._required)
        try container.encode(sensitive, forKey: .sensitive)
    }
}

