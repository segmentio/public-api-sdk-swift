//
// UpdateFilterByIdInput.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Input for UpdateFilterById. */
public struct UpdateFilterByIdInput: Codable, JSONEncodable, Hashable {

    /** The Integration id of the resource. */
    public var integrationId: String
    /** Whether the filter is enabled. */
    public var enabled: Bool?
    /** The name of the filter. */
    public var name: String?
    /** The description of the filter. */
    public var description: String?
    /** The \"if\" statement for a filter. */
    public var _if: String?
    /** Whether the event is dropped. */
    public var drop: Bool?

    public init(integrationId: String, enabled: Bool? = nil, name: String? = nil, description: String? = nil, _if: String? = nil, drop: Bool? = nil) {
        self.integrationId = integrationId
        self.enabled = enabled
        self.name = name
        self.description = description
        self._if = _if
        self.drop = drop
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case integrationId
        case enabled
        case name
        case description
        case _if = "if"
        case drop
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(integrationId, forKey: .integrationId)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(_if, forKey: ._if)
        try container.encodeIfPresent(drop, forKey: .drop)
    }
}

