//
// EntryRules.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The entry rules for the journey. */
public struct EntryRules: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case multiple = "MULTIPLE"
        case once = "ONCE"
        case reEntryAfterExit = "RE_ENTRY_AFTER_EXIT"
    }
    public var type: ModelType
    public var concurrency: Concurrency?

    public init(type: ModelType, concurrency: Concurrency? = nil) {
        self.type = type
        self.concurrency = concurrency
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case concurrency
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(concurrency, forKey: .concurrency)
    }
}

