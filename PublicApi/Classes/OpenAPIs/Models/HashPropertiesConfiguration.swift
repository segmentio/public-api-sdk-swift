//
// HashPropertiesConfiguration.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Optional object for hashing properties within an event. */
public struct HashPropertiesConfiguration: Codable, JSONEncodable, Hashable {

    public enum Encoding: String, Codable, CaseIterable {
        case base16 = "BASE16"
        case base64 = "BASE64"
        case base64url = "BASE64URL"
        case hex = "HEX"
    }
    /** Which algorithm to use to hash to properties. */
    public var algorithm: String
    /** Optional key to hash with. */
    public var key: String?
    /** Optional encoding to use for the hashing. */
    public var encoding: Encoding?
    /** The paths to the properties to be hashed. */
    public var paths: [String]

    public init(algorithm: String, key: String? = nil, encoding: Encoding? = nil, paths: [String]) {
        self.algorithm = algorithm
        self.key = key
        self.encoding = encoding
        self.paths = paths
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case algorithm
        case key
        case encoding
        case paths
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(algorithm, forKey: .algorithm)
        try container.encodeIfPresent(key, forKey: .key)
        try container.encodeIfPresent(encoding, forKey: .encoding)
        try container.encode(paths, forKey: .paths)
    }
}

