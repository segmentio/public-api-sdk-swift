//
// Config.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Config contains interval duration in case of periodic or day and hours in case of specific_days. Empty if strategy is MANUAL. */
public struct Config: Codable, JSONEncodable, Hashable {

    /** Duration is specified as a string, EG: 15m, 3h25m30s. */
    public var interval: String
    /** Days of the week. */
    public var days: [Double]
    /** Hours of the day. */
    public var hours: [Double]
    /** Timezone for the specified times. */
    public var timezone: String
    /** 5 field cron string expression. The cron expression must be larger than 15 minutes. */
    public var spec: String

    public init(interval: String, days: [Double], hours: [Double], timezone: String, spec: String) {
        self.interval = interval
        self.days = days
        self.hours = hours
        self.timezone = timezone
        self.spec = spec
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case interval
        case days
        case hours
        case timezone
        case spec
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(interval, forKey: .interval)
        try container.encode(days, forKey: .days)
        try container.encode(hours, forKey: .hours)
        try container.encode(timezone, forKey: .timezone)
        try container.encode(spec, forKey: .spec)
    }
}

