//
// MetricBeta.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The event delivery metric. */
public struct MetricBeta: Codable, JSONEncodable, Hashable {

    /** The name of the metric. */
    public var metricName: String
    /** Number of occurrences of the metric. */
    public var total: Double
    /** Breakdown of metrics within a metric. */
    public var breakdown: [BreakdownBeta]?

    public init(metricName: String, total: Double, breakdown: [BreakdownBeta]? = nil) {
        self.metricName = metricName
        self.total = total
        self.breakdown = breakdown
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case metricName
        case total
        case breakdown
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(metricName, forKey: .metricName)
        try container.encode(total, forKey: .total)
        try container.encodeIfPresent(breakdown, forKey: .breakdown)
    }
}

