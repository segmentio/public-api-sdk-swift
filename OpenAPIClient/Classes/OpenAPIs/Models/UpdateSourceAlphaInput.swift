//
// UpdateSourceAlphaInput.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Updates an existing Source based on a set of parameters. */
public struct UpdateSourceAlphaInput: Codable, JSONEncodable, Hashable {

    /** An optional human-readable name to associate with the Source.  Config API note: equal to `displayName`. */
    public var name: String?
    /** Enable to allow the Source to send data. */
    public var enabled: Bool?
    /** The slug that identifies the Source.  Config API note: equal to `name`. */
    public var slug: String?
    /** A key-value object that contains instance-specific settings for the Source.  Different kinds of Sources require different kinds of input. The settings input for a Source comes from the `options` object associated with this instance of a Source.  You can find the full list of required settings by accessing the Sources catalog endpoint under `/catalog/sources`. */
    public var settings: Dictionary?

    public init(name: String? = nil, enabled: Bool? = nil, slug: String? = nil, settings: Dictionary? = nil) {
        self.name = name
        self.enabled = enabled
        self.slug = slug
        self.settings = settings
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case enabled
        case slug
        case settings
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(slug, forKey: .slug)
        try container.encodeIfPresent(settings, forKey: .settings)
    }
}

