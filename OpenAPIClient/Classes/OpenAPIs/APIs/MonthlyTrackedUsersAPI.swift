//
// MonthlyTrackedUsersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class MonthlyTrackedUsersAPI {

    /**
     Get Daily Per Source MTU Usage
     
     - parameter period: (query) The start of the usage month, in the ISO-8601 format.  This parameter exists in alpha. 
     - parameter pagination: (query) Pagination input for per Source MTU counts.  This parameter exists in alpha. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getDailyPerSourceMTUUsage(period: String, pagination: PaginationInput, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetDailyPerSourceMTUUsage200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getDailyPerSourceMTUUsageWithRequestBuilder(period: period, pagination: pagination).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Daily Per Source MTU Usage
     - GET /usage/mtu/sources/daily
     - Provides daily cumulative per-source MTU counts for a usage period.
     - BASIC:
       - type: http
       - name: token
     - parameter period: (query) The start of the usage month, in the ISO-8601 format.  This parameter exists in alpha. 
     - parameter pagination: (query) Pagination input for per Source MTU counts.  This parameter exists in alpha. 
     - returns: RequestBuilder<GetDailyPerSourceMTUUsage200Response> 
     */
    open class func getDailyPerSourceMTUUsageWithRequestBuilder(period: String, pagination: PaginationInput) -> RequestBuilder<GetDailyPerSourceMTUUsage200Response> {
        let localVariablePath = "/usage/mtu/sources/daily"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "period": period.encodeToJSON(),
            "pagination": pagination.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetDailyPerSourceMTUUsage200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Daily Workspace MTU Usage
     
     - parameter period: (query) The start of the usage month, in the ISO-8601 format.  This parameter exists in alpha. 
     - parameter pagination: (query) Pagination input for Workspace MTU counts.  This parameter exists in alpha. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getDailyWorkspaceMTUUsage(period: String, pagination: PaginationInput, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetDailyWorkspaceMTUUsage200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getDailyWorkspaceMTUUsageWithRequestBuilder(period: period, pagination: pagination).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Daily Workspace MTU Usage
     - GET /usage/mtu/daily
     - Provides daily cumulative MTU counts for a usage period.
     - BASIC:
       - type: http
       - name: token
     - parameter period: (query) The start of the usage month, in the ISO-8601 format.  This parameter exists in alpha. 
     - parameter pagination: (query) Pagination input for Workspace MTU counts.  This parameter exists in alpha. 
     - returns: RequestBuilder<GetDailyWorkspaceMTUUsage200Response> 
     */
    open class func getDailyWorkspaceMTUUsageWithRequestBuilder(period: String, pagination: PaginationInput) -> RequestBuilder<GetDailyWorkspaceMTUUsage200Response> {
        let localVariablePath = "/usage/mtu/daily"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "period": period.encodeToJSON(),
            "pagination": pagination.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetDailyWorkspaceMTUUsage200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
